<?xml version="1.0" encoding="utf-8"?>
<abapGit version="v1.0.0" serializer="LCL_OBJECT_ENHO" serializer_version="v1.0.0">
 <asx:abap xmlns:asx="http://www.sap.com/abapxml" version="1.0">
  <asx:values>
   <TOOL>HOOK_IMPL</TOOL>
   <SHORTTEXT>Function module      DD_INT_TBSH_PROPOSAL</SHORTTEXT>
   <ORIGINAL_OBJECT>
    <PGMID>R3TR</PGMID>
    <ORG_OBJ_TYPE>FUGR</ORG_OBJ_TYPE>
    <ORG_OBJ_NAME>SDTB</ORG_OBJ_NAME>
    <ORG_MAIN_TYPE>FUGR</ORG_MAIN_TYPE>
    <ORG_MAIN_NAME>SDTB</ORG_MAIN_NAME>
    <PROGRAMNAME>SAPLSDTB</PROGRAMNAME>
   </ORIGINAL_OBJECT>
   <ENHANCEMENTS>
    <ENH_HOOK_IMPL>
     <PROGRAMNAME>SAPLSDTB</PROGRAMNAME>
     <ENHMODE>D</ENHMODE>
     <FULL_NAME>\PR:SAPLSDTB\FO:CONVERT_36_WITH_PROP\SE:END\EI</FULL_NAME>
     <SOURCE>
      <item>* ZH_ALL_ROUND proposal.</item>
      <item>  IF dd35v_tab-shlpname EQ &apos;ZH_ALL_ROUND&apos; AND</item>
      <item>     ( sy-ucomm EQ &apos;PREP&apos; OR sy-ucomm EQ &apos;GOON&apos; ).</item>
      <item/>
      <item>    DATA: zlv_tabname  TYPE TABNAME,</item>
      <item>          zlt_field    TYPE STRINGTAB,</item>
      <item>          zlv_distinct TYPE FLAG,</item>
      <item>          zlv_count    TYPE i,</item>
      <item>          zlv_index    TYPE i.</item>
      <item/>
      <item>    CALL FUNCTION &apos;ZARSH_PROPOSAL&apos;</item>
      <item>      EXPORTING</item>
      <item>        iv_tabname   = dd35v_tab-tabname</item>
      <item>        iv_fieldname = dd35v_tab-fieldname</item>
      <item>      IMPORTING</item>
      <item>        ev_tabname   = zlv_tabname</item>
      <item>        et_field     = zlt_field</item>
      <item>        ev_distinct  = zlv_distinct.</item>
      <item>    IF zlv_tabname IS INITIAL.</item>
      <item>      zlv_tabname = &apos;** input table name **&apos;.</item>
      <item>      APPEND &apos;** input field name **&apos; TO zlt_field.</item>
      <item>    ENDIF.</item>
      <item>    zlv_count = lines( zlt_field ).</item>
      <item/>
      <item>    LOOP AT dd36m_tab ASSIGNING FIELD-SYMBOL(&lt;zls_dd36m&gt;).</item>
      <item>      CASE &lt;zls_dd36m&gt;-shlpfield.</item>
      <item>        WHEN &apos;EV_FIELD1&apos;.</item>
      <item>          &lt;zls_dd36m&gt;-shtable = &lt;zls_dd36m&gt;-tabname.</item>
      <item>          &lt;zls_dd36m&gt;-shfield = &lt;zls_dd36m&gt;-fieldname.</item>
      <item>        WHEN &apos;IV_TABLE&apos;.</item>
      <item>          &lt;zls_dd36m&gt;-shtype = &apos;C&apos;.</item>
      <item>          &lt;zls_dd36m&gt;-shtable = |&apos;{ zlv_tabname }&apos;|.</item>
      <item>        WHEN &apos;IV_DISTINCT&apos;.</item>
      <item>          IF zlv_distinct EQ abap_true.</item>
      <item>            &lt;zls_dd36m&gt;-shtype = &apos;C&apos;.</item>
      <item>            &lt;zls_dd36m&gt;-shtable = |&apos;X&apos;|.</item>
      <item>          ENDIF.</item>
      <item>*        WHEN &apos;IV_FIELD1&apos;.</item>
      <item>*          &lt;zls_dd36m&gt;-shtype = &apos;C&apos;.</item>
      <item>*          &lt;zls_dd36m&gt;-shtable = |&apos;{ zlt_field[ 1 ] }&apos;|.</item>
      <item>        WHEN OTHERS.</item>
      <item>          IF &lt;zls_dd36m&gt;-shlpfield CP &apos;IV_FIELD*&apos;.</item>
      <item>            zlv_index = &lt;zls_dd36m&gt;-shlpfield+8.</item>
      <item>            IF zlv_index &lt;= zlv_count.</item>
      <item>              &lt;zls_dd36m&gt;-shtype = &apos;C&apos;.</item>
      <item>              &lt;zls_dd36m&gt;-shtable = |&apos;{ zlt_field[ zlv_index ] }&apos;|.</item>
      <item>            ENDIF.</item>
      <item>          ENDIF.</item>
      <item>      ENDCASE.</item>
      <item>    ENDLOOP.</item>
      <item>  ENDIF.</item>
     </SOURCE>
    </ENH_HOOK_IMPL>
   </ENHANCEMENTS>
   <SOTR>
    <item>
     <HEADER>
      <CONCEPT>42010A02B0231EDBB7C54D1BF10F7D40</CONCEPT>
      <CREA_LAN>E</CREA_LAN>
      <TRALA_TYPE>1</TRALA_TYPE>
      <OBJID_VEC>AAI=</OBJID_VEC>
     </HEADER>
     <ENTRIES>
      <SOTR_TEXT>
       <CONCEPT>42010A02B0231EDBB7C54D1BF10F7D40</CONCEPT>
       <LANGU>E</LANGU>
       <LFD_NUM>0001</LFD_NUM>
       <FLAG_CNTXT>X</FLAG_CNTXT>
       <STATUS>R</STATUS>
       <LENGTH>255</LENGTH>
       <TEXT>Function module      DD_INT_TBSH_PROPOSAL</TEXT>
      </SOTR_TEXT>
     </ENTRIES>
    </item>
   </SOTR>
   <SOTR_USE>
    <SOTR_USE>
     <PGMID>R3TR</PGMID>
     <OBJECT>ENHO</OBJECT>
     <OBJ_NAME>ZE_ARSH_SH_PROPOSAL</OBJ_NAME>
     <CONCEPT>42010A02B0231EDBB7C54D1BF10F7D40</CONCEPT>
     <LFD_NUM>0001</LFD_NUM>
    </SOTR_USE>
   </SOTR_USE>
  </asx:values>
 </asx:abap>
</abapGit>
